version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: l2-challenge-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: packaging_db
      POSTGRES_USER: packaging_user
      POSTGRES_PASSWORD: packaging_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - packaging-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U packaging_user -d packaging_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: l2-challenge-api
    restart: unless-stopped
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: packaging_user
      DB_PASSWORD: packaging_password
      DB_NAME: packaging_db
      NODE_ENV: production
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - packaging-network
    volumes:
      - ./src:/app/src
      - ./package.json:/app/package.json
      - ./yarn.lock:/app/yarn.lock
      - ./tsconfig.json:/app/tsconfig.json
      - ./nest-cli.json:/app/nest-cli.json

volumes:
  postgres_data:

networks:
  packaging-network:
    driver: bridge
